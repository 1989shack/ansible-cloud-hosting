---
# See: https://github.com/progrium/docker-consul

# See: https://www.digitalocean.com/community/tutorials/an-introduction-to-using-consul-a-service-discovery-system-on-ubuntu-14-04
# See: https://www.digitalocean.com/community/tutorials/how-to-configure-consul-in-a-production-environment-on-ubuntu-14-04
# See: https://www.digitalocean.com/community/tutorials/how-to-secure-consul-with-tls-encryption-on-ubuntu-14-04

- name: creates directories
  file: 
    state: directory
    path: '{{ item }}'
  with_items:
    - '/etc/consul'
    - '{{ docker_consul_tls_dir }}'
    - '/var/consul'


- name: uploads certifications
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: 0400
    owner: root
  with_items:
    - { src: 'certs/consul/ca.cert', dest: '{{ docker_consul_tls_ca_cert_file }}' }
    - { src: 'certs/consul/consul.cert', dest: '{{ docker_consul_tls_server_cert_file }}' }
    - { src: 'certs/consul/consul.key', dest: '{{ docker_consul_tls_server_key_file }}' }
  notify: 
    - restart consul # restart consul if certifications changes


- name: uploads configuration files
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
    - { src: 'config.json.j2', dest: '/etc/consul/config.json' }
  notify: 
    - restart consul # restart consul if configuration changes


# Fir for: One or more undefined variables: 'ansible_docker0' is undefined
- name: updates facts if docker0 is not defined
  action: setup
  when: ansible_docker0 is not defined


- name: retrieves and launches 'consul' image
  docker:
    docker_api_version: '{{ docker_api_version }}'
    image: progrium/consul:latest
    ports:
      - '{{ ansible_eth0.ipv4.address }}:8300:8300'
      - '{{ ansible_eth0.ipv4.address }}:8301:8301' # LAN
      - '{{ ansible_eth0.ipv4.address }}:8301:8301/udp' # LAN
      - '{{ ansible_eth0.ipv4.address }}:8302:8302' # WAN
      - '{{ ansible_eth0.ipv4.address }}:8302:8302/udp' # WAN
      - '{{ ansible_eth0.ipv4.address }}:8400:8400' # RPC
      - '{{ ansible_eth0.ipv4.address }}:8500:8500' # HTTP
      - '{{ ansible_eth0.ipv4.address }}:8543:8543' # HTTPS
      - '{{ ansible_docker0.ipv4.address }}:53:53/udp' # DNS
    volumes:
      - '/var/consul:/data' # to support persistent storage
      - '/etc/consul/config.json:/etc/consul.d/server/config.json:ro' # configuration file
      - '{{ docker_consul_tls_dir }}:/etc/consul.d/ssl/' # ssl 
    hostname: '{{ ansible_hostname }}'
    name: consul
#    command: '-advertise {{ ansible_eth0.ipv4.address }} -bootstrap-expect 3 -join-wan xx.xx.xx.xx  -config-file /etc/consul.d/server/config.json'
    command: '-advertise {{ ansible_eth0.ipv4.address }} -bootstrap-expect 3 -config-file /etc/consul.d/server/config.json'
    env:
      # variables for consul
      SERVICE_53_NAME: 'consul-dns'
      SERVICE_8500_NAME: 'consul-api'
      SERVICE_TAGS: '{{ ansible_hostname }}'
#      SERVICE_REGION: 'EU1'
    restart_policy: always # try to restart if the container exits
    restart_policy_retry: 3 # it will try to restart 3 times before giving up
    pull: always # will be checked for a newer version of the image each time the task executes
    state: started
  when: docker_consul_join == ansible_eth0.ipv4.address # if master


- name: retrieves and launches 'consul' image
  docker:
    docker_api_version: '{{ docker_api_version }}'
    image: progrium/consul:latest
    ports:
      - '{{ ansible_eth0.ipv4.address }}:8300:8300'
      - '{{ ansible_eth0.ipv4.address }}:8301:8301' # LAN
      - '{{ ansible_eth0.ipv4.address }}:8301:8301/udp' # LAN
      - '{{ ansible_eth0.ipv4.address }}:8302:8302' # WAN
      - '{{ ansible_eth0.ipv4.address }}:8302:8302/udp' # WAN
      - '{{ ansible_eth0.ipv4.address }}:8400:8400' # RPC
      - '{{ ansible_eth0.ipv4.address }}:8500:8500' # HTTP
      - '{{ ansible_eth0.ipv4.address }}:8543:8543' # HTTPS
      - '{{ ansible_docker0.ipv4.address }}:53:53/udp' # DNS
    volumes:
      - '/var/consul:/data' # to support persistent storage
      - '/etc/consul/config.json:/etc/consul.d/server/config.json:ro' # configuration file
      - '{{ docker_consul_tls_dir }}:/etc/consul.d/ssl/' # ssl 
    hostname: '{{ ansible_hostname }}'
    name: consul
    command: '-advertise {{ ansible_eth0.ipv4.address }} -join {{ docker_consul_join }} -config-file /etc/consul.d/server/config.json'
    env:
      # variables for consul
      SERVICE_53_NAME: 'consul-dns'
      SERVICE_8500_NAME: 'consul-api'
      SERVICE_TAGS: '{{ ansible_hostname }}'
#      SERVICE_REGION: 'EU1'
    restart_policy: always # try to restart if the container exits
    restart_policy_retry: 3 # it will try to restart 3 times before giving up
    pull: always # will be checked for a newer version of the image each time the task executes
    state: started
  when: docker_consul_join != ansible_eth0.ipv4.address # if secondary

